// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(BookBorrowDbContext))]
    [Migration("20231123111926_ForeingKeyAdded")]
    partial class ForeingKeyAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharedLayer.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BorrowedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBookAvailable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LentByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("BorrowedByUserId");

                    b.HasIndex("LentByUserId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("SharedLayer.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TokensAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "Rohan",
                            Password = "user123",
                            TokensAvailable = 10,
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "Rohan",
                            Password = "user123",
                            TokensAvailable = 10,
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "Rohan",
                            Password = "user123",
                            TokensAvailable = 10,
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 4,
                            Name = "Rohan",
                            Password = "user123",
                            TokensAvailable = 10,
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("SharedLayer.Models.Book", b =>
                {
                    b.HasOne("SharedLayer.Models.User", "BorrowedByUser")
                        .WithMany("BooksBorrowed")
                        .HasForeignKey("BorrowedByUserId");

                    b.HasOne("SharedLayer.Models.User", "LentByUser")
                        .WithMany("BooksLent")
                        .HasForeignKey("LentByUserId");

                    b.Navigation("BorrowedByUser");

                    b.Navigation("LentByUser");
                });

            modelBuilder.Entity("SharedLayer.Models.User", b =>
                {
                    b.Navigation("BooksBorrowed");

                    b.Navigation("BooksLent");
                });
#pragma warning restore 612, 618
        }
    }
}
